{
  // "include": ["src/**/*"],
  "exclude": ["node_modules", "benchmark/fixtures", "fixtures-tmp"],
  "compilerOptions": {
    /* Basic Options */
    // "outDir": "./dist", // 継承先で上書きする
    // "target": "esnext", // 継承先で上書きする
    // "lib": ["esnext", "dom"], // 継承先で上書きする
    "isolatedModules": true, // for isolated file emit (ref: https://github.com/microsoft/TypeScript/wiki/Performance#isolated-file-emit , https://www.typescriptlang.org/v2/ja/tsconfig#isolatedModules)
    // "importsNotUsedAsValues": "error", // for isolated file emit (https://www.typescriptlang.org/v2/ja/tsconfig#isolatedModules , https://qiita.com/vvakame/items/72da760526ec7cc25c2d#%E5%9E%8B%E3%81%AE%E3%81%BF%E3%81%AEimport-export%E3%81%AE%E3%82%B5%E3%83%9D%E3%83%BC%E3%83%88)
    "declaration": true, // Project Reference で依存された先から型が読み込めるように
    "declarationMap": true, // Project Reference で依存された先から *.ts が追跡できるように
    "incremental": true, // ビルド結果をキャッシュするように

    /* Module Options */
    "module": "Node16",
    "esModuleInterop": false, // `"module": "node12"` との相性が悪いので off にする
    "resolveJsonModule": true, // import した json の型を推論するように
    "forceConsistentCasingInFileNames": true, // 大文字小文字を区別しない環境 (win) でも unix と同じように区別する
    // 🤯🤯🤯 THIS IS SUPER HACK!!! 🤯🤯🤯
    // - comlink provides an ESM module (ex. `comlink/dist/esm/node-adapter.mjs`)
    // - Of course, comlink also provide type definitions (ex. `comlink/dist/esm/node-adapter.d.ts`)
    // - However, the corresponding type definition for `xxx.mjs` is `xxx.d.mts` in `"module": "node12"` mode
    // - Therefore, importing the ESM module causes compilation errors
    // - So, use `paths` option to force `xxx.mjs` to be mapped to `xxx.d.ts`.
    "baseUrl": ".",
    "paths": {
      "comlink/dist/esm/node-adapter.mjs": ["./node_modules/comlink/dist/esm/node-adapter.js"]
    },

    /* Additional Features */
    // "jsx": "react",

    /* Strict Type-Checking Options */
    "strict": true,
    "skipLibCheck": true,

    /* Lint Options */
    "noUnusedLocals": true,
    "noUnusedParameters": true,

    /* Debug Options */
    "sourceMap": true, // for ts-loader (ref: https://github.com/TypeStrong/ts-loader#devtool--sourcemaps)
    "locale": "ja"
  }
}
